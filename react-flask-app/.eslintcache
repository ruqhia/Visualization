[{"C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\App.js":"3","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\loss.js":"4","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\reward.js":"5","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\rewardLoss.js":"6","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\Reward.js":"7","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\slider.js":"8"},{"size":514,"mtime":1615584841046,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1979,"mtime":1615584644631,"results":"12","hashOfConfig":"10"},{"size":6213,"mtime":1617052931288,"results":"13","hashOfConfig":"10"},{"size":3700,"mtime":1615584385165,"results":"14","hashOfConfig":"10"},{"size":3060,"mtime":1615622117436,"results":"15","hashOfConfig":"10"},{"size":3342,"mtime":1617052012965,"results":"16","hashOfConfig":"10"},{"size":6456,"mtime":1615850881329,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tljdoy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\index.js",[],["40","41"],"C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\App.js",["42","43","44","45","46","47","48"],"import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Reward} from './Reward';\n\nimport Loss from './loss'\nimport rewardLoss from './rewardLoss'\nimport { Chart } from '@antv/g2';\n\n\n\n// function App() {\n\n//   fetch('https://gw.alipayobjects.com/os/basement_prod/a719cd4e-bd40-4878-a4b4-df8a6b531dfe.json')\n//   .then((res) => res.json())\n//   .then((data) => {\n//     const heatmapPlot = new Heatmap(document.getElementById('container'), {\n//       width: 1200,\n//       height: 575,\n//       autoFit: false,\n//       data,\n//       xField: 'Month of Year',\n//       yField: 'District',\n//       colorField: 'AQHI',\n//       color: ['#174c83', '#7eb6d4', '#efefeb', '#efa759', '#9b4d16'],\n//       meta: {\n//         'Month of Year': {\n//           type: 'cat',\n//         },\n//       },\n//     });\n//     heatmapPlot.render();\n//   });\n// return null;\n// }\n\n// export default App;\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n\n\n    {/* <Loss display-text=\"hello\"/> */}\n    {/* <p>Reward</p>\n    <p>Loss</p>\n    <p>Reward and Loss</p> */}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// function App() {\n  // const [placeholder, setPlaceholder] = useState('Hi');\n\n  // useEffect(() => {\n  //   fetch('http://localhost:5000/api/hello').then(res => res.json()).then(data => {\n  //     console.log(data.result);\n  //     setPlaceholder(data.result);\n  //   });\n  // }, []);\n\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //       <p>Flask says {placeholder}</p>\n  //     </header>\n  //   </div>\n  // );\n// }\n\n","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\loss.js",["49","50","51","52","53","54"],"import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Chart } from '@antv/g2';\r\nimport ReactDOM from 'react-dom';\r\nimport { Interaction, registerInteraction} from '@antv/g2';\r\nimport G2 from '@antv/g-canvas';\r\n\r\n \r\n  const data = { weight:.1 };\r\n  fetch('http://localhost:5000/api/hello', {\r\n    method: 'POST', // or 'PUT'\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n  .then((res) => res.json())\r\n  .then(data => {\r\n    console.log('Success:', data);\r\n  const source = data.map((arr) => {\r\n    return {\r\n      name: arr[0],\r\n      day: arr[1],\r\n      value: arr[2],\r\n      xVal: arr[3],\r\n      yVal:arr[4],\r\n      target:arr[5]\r\n    };\r\n  });\r\n  \r\n  const chart = new Chart({\r\n    container: 'c1',\r\n    width: 400,\r\n    height: 400,\r\n\r\n    padding:[20, 20, 50, 20],\r\n  });\r\n  chart.data(source);\r\n\r\n\r\n  chart.scale('name', {\r\n    type: 'cat',\r\n      min: 0,\r\n      max: 1,\r\n    values:  ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99'],\r\n  });\r\n  chart.scale('day', {\r\n    type: 'cat',\r\n        min: 0,\r\n      max: 1,\r\n    values: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99'],\r\n  });\r\n  chart.scale('value', {\r\n    nice: true,\r\n  });\r\n  \r\n  chart.axis('name', {\r\n    tickLine: null,\r\n    grid: {\r\n      alignTick: false,\r\n      line: {\r\n        style: {\r\n          lineWidth: 1,\r\n          lineDash: null,\r\n          stroke: '#f0f0f0',\r\n        },\r\n      },\r\n    },\r\n  });\r\n  \r\n  chart.axis('day', {\r\n    title: null,\r\n    grid: {\r\n      alignTick: false,\r\n      line: {\r\n        style: {\r\n          lineWidth: 1,\r\n          lineDash: null,\r\n          stroke: '#f0f0f0',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n\r\n  chart.removeInteraction('continuous-visible-filter');\r\n  chart.removeInteraction('continuous-filter');\r\n\r\n  chart\r\n    .polygon()\r\n    .position('name*day')\r\n    .color('value', '#460659-#25828E-#3BBB75-#EBE51B')\r\n\r\n  \r\n    chart.legend({\r\n      min:0,\r\n      max:1,\r\n    });\r\n\r\n\r\n  registerInteraction('slider', {\r\n    start: [{ trigger: 'legend:valuechanged', \r\n    \r\n    action: context => {\r\n      console.log(\"he\");\r\n    },\r\n    }],\r\n    end:[{trigger: 'legend:dragend',\r\n    action: context => {\r\n      console.log(\"Hi\")\r\n      var weight=((context.getCurrentPoint()).x-150)/100;\r\n      console.log(weight);\r\n      if(weight>1)\r\n        weight=1;\r\n      if(weight<0)\r\n        weight=0;\r\n      const data2 = {weight:weight};\r\n      fetch('http://localhost:5000/api/hello', {\r\n        method: 'POST', // or 'PUT'\r\n    \r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data2),\r\n      })\r\n      .then((res) => res.json())\r\n      .then(data => {\r\n\r\n        const source2 = data.map((arr) => {\r\n          return {\r\n            name: arr[0],\r\n            day: arr[1],\r\n            value: arr[2],\r\n            xVal: arr[3],\r\n            yVal:arr[4],\r\n            target:arr[5]\r\n          };\r\n        });\r\n        chart.changeData(source2);\r\n\r\n      });\r\n\r\n    }\r\n  \r\n  \r\n  }]\r\n\r\n  });\r\n\r\n  registerInteraction('slider2', {\r\n    start: [{ trigger: 'plot:click', \r\n    \r\n    action: context => {\r\n      fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/scatter.json')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const chart = new Chart({\r\n          container: 'c1',\r\n          autoFit: false,\r\n          height: 500,\r\n          width: 500\r\n        });\r\n        // 数据格式： [{\"gender\":\"female\",\"height\":161.2,\"weight\":51.6}]\r\n        chart.data(data);\r\n        chart.scale({\r\n          height: { nice: true },\r\n          weight: { nice: true },\r\n        });\r\n        chart.tooltip({\r\n          showTitle: false,\r\n          showCrosshairs: true,\r\n          crosshairs: {\r\n            type: 'xy',\r\n          },\r\n          itemTpl: '<li class=\"g2-tooltip-list-item\" data-index={index} style=\"margin-bottom:4px;\">'\r\n            + '<span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>'\r\n            + '{name}<br/>'\r\n            + '{value}'\r\n            + '</li>'\r\n        });\r\n        chart\r\n          .point()\r\n          .position('height*weight')\r\n          .color('gender')\r\n          .shape('circle')\r\n          .tooltip('gender*height*weight', (gender, height, weight) => {\r\n            return {\r\n              name: gender,\r\n              value: height + '(cm), ' + weight + '(kg)'\r\n            };\r\n          })\r\n          .style({\r\n            fillOpacity: 0.85\r\n          });\r\n        chart.interaction('legend-highlight');\r\n        chart.render();\r\n      });\r\n      \r\n    },\r\n    }],\r\n\r\n  });\r\n  chart.tooltip({\r\n    showMarkers: true,\r\n  });\r\n  chart.interaction('slider');\r\n  chart.interaction('slider2');\r\n  chart\r\n  .point()\r\n  .position('xVal*yVal')\r\n  .color('#460659-#25828E-#3BBB75-#EBE51B')\r\n  .size({values: [3]})\r\n  .shape('circle')\r\n\r\n  chart.axis('target',false);\r\n  chart.axis('xVal',false);\r\n  chart.axis('yVal',false);\r\n\r\n  chart.interaction('element-active');\r\n  chart.render();\r\n});\r\n\r\n///register action\r\n//look at file for datafilter\r\n///register interaction","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\reward.js",[],"C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\rewardLoss.js",[],"C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\Reward.js",["55","56","57","58","59","60","61"],"import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Chart } from '@antv/g2';\r\nimport ReactDOM from 'react-dom';\r\nimport { Interaction, registerInteraction} from '@antv/g2';\r\nimport G2 from '@antv/g-canvas';\r\n\r\n \r\n  const data = { weight:.1 };\r\n  fetch('http://localhost:5000/api/hello', {\r\n    method: 'POST', // or 'PUT'\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n  .then((res) => res.json())\r\n  .then(data => {\r\n    console.log('Success:', data);\r\n  const source = data.map((arr) => {\r\n    return {\r\n      name: arr[0],\r\n      day: arr[1],\r\n      value: arr[2],\r\n      xVal: arr[3],\r\n      yVal:arr[4],\r\n      target:arr[5]\r\n    };\r\n  });\r\n  \r\n  const chart = new Chart({\r\n    container: 'c1',\r\n    width: 400,\r\n    height: 400,\r\n\r\n    padding:[20, 20, 50, 20],\r\n  });\r\n  chart.data(source);\r\n\r\n\r\n  chart.scale('name', {\r\n    type: 'cat',\r\n      min: 0,\r\n      max: 1,\r\n    values:  ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99'],\r\n  });\r\n  chart.scale('day', {\r\n    type: 'cat',\r\n        min: 0,\r\n      max: 1,\r\n    values: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99'],\r\n  });\r\n  chart.scale('value', {\r\n    nice: true,\r\n  });\r\n  \r\n  chart.axis('name', {\r\n    tickLine: null,\r\n    grid: {\r\n      alignTick: false,\r\n      line: {\r\n        style: {\r\n          lineWidth: 1,\r\n          lineDash: null,\r\n          stroke: '#f0f0f0',\r\n        },\r\n      },\r\n    },\r\n  });\r\n  \r\n  chart.axis('day', {\r\n    title: null,\r\n    grid: {\r\n      alignTick: false,\r\n      line: {\r\n        style: {\r\n          lineWidth: 1,\r\n          lineDash: null,\r\n          stroke: '#f0f0f0',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n\r\n  \r\n\r\n  chart\r\n    .polygon()\r\n    .position('name*day')\r\n    .color('value', '#460659-#25828E-#3BBB75-#EBE51B')\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n//   chart\r\n//   .point()\r\n//   .position('xVal*yVal')\r\n//   .color('#460659-#25828E-#3BBB75-#EBE51B')\r\n//   .size({values: [3]})\r\n//   .shape('circle')\r\n\r\n//   chart.axis('target',false);\r\n//   chart.axis('xVal',false);\r\n//   chart.axis('yVal',false);\r\n\r\n  chart.interaction('element-active');\r\n  chart.render();\r\n});\r\n\r\n///register action\r\n//look at file for datafilter\r\n///register interaction","C:\\Users\\PC\\Desktop\\analyticly\\test\\react-flask-app\\src\\slider.js",["62"],"import { deepMix, get, isObject, size } from '@antv/util';\r\nimport { COMPONENT_TYPE, DIRECTION, LAYER } from '../../constant';\r\nimport { IGroup, Slider as SliderComponent, TrendCfg } from '../../dependents';\r\nimport { ComponentOption, Datum } from '../../interface';\r\nimport { BBox } from '../../util/bbox';\r\nimport { directionToPosition } from '../../util/direction';\r\nimport { isBetween, omit } from '../../util/helper';\r\nimport View from '../view';\r\nimport { Controller } from './base';\r\n\r\nexport type SliderFormatterType = (val: any, datum: Datum, idx: number) => any;\r\n/** Slider 配置 */\r\nexport interface SliderOption {\r\n  /** slider 高度 */\r\n  readonly height?: number;\r\n\r\n  /** 滑块背景区域配置 */\r\n  readonly trendCfg?: TrendCfg;\r\n  /** 滑块背景样式 */\r\n  readonly backgroundStyle?: any;\r\n  /** 滑块前景样式 */\r\n  readonly foregroundStyle?: any;\r\n  /** 滑块两个操作块样式 */\r\n  readonly handlerStyle?: any;\r\n  /** 文本样式 */\r\n  readonly textStyle?: any;\r\n  /** 允许滑动位置的最小值 */\r\n  readonly minLimit?: number;\r\n  /** 允许滑动位置的最大值 */\r\n  readonly maxLimit?: number;\r\n  /** 滑块初始化的起始位置 */\r\n  readonly start?: number;\r\n  /** 滑块初始化的结束位置 */\r\n  readonly end?: number;\r\n  /** 滑块文本格式化函数 */\r\n  formatter?: SliderFormatterType;\r\n}\r\n\r\ntype Option = SliderOption | boolean;\r\n\r\n/**\r\n * @ignore\r\n * slider Controller\r\n */\r\nexport default class Slider extends Controller<Option> {\r\n  private slider: ComponentOption;\r\n  private container: IGroup;\r\n\r\n  constructor(view: View) {\r\n    super(view);\r\n\r\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\r\n  }\r\n\r\n  get name(): string {\r\n    return 'slider';\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   */\r\n  public init() {}\r\n\r\n  /**\r\n   * 渲染\r\n   */\r\n  public render() {\r\n    this.option = this.view.getOptions().slider;\r\n\r\n    if (this.option) {\r\n      if (this.slider) {\r\n        // exist, update\r\n        this.slider = this.updateSlider();\r\n      } else {\r\n        // not exist, create\r\n        this.slider = this.createSlider();\r\n        // 监听事件，绑定交互\r\n        this.slider.component.on('sliderchange', this.onValueChanged);\r\n      }\r\n      // changeData 的时候同样需要更新\r\n      // 设置初始的 text\r\n      const min = this.slider.component.get('start') || 0;\r\n      const max = this.slider.component.get('end') || 1;\r\n\r\n      this.updateMinMaxText(min, max);\r\n    } else {\r\n      if (this.slider) {\r\n        // exist, destroy\r\n        this.slider.component.destroy();\r\n        this.slider = undefined;\r\n      } else {\r\n        // do nothing\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 布局\r\n   */\r\n  public layout() {\r\n    if (this.slider) {\r\n      const width = this.view.coordinateBBox.width;\r\n      // 获取组件的 layout bbox\r\n      const bboxObject = this.slider.component.getLayoutBBox();\r\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height);\r\n\r\n      const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\r\n      const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\r\n\r\n      // 默认放在 bottom\r\n      this.slider.component.update({\r\n        x: x2,\r\n        y: y1,\r\n        width,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新\r\n   */\r\n  public update() {\r\n    // 逻辑和 render 保持一致\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * 创建 slider 组件\r\n   */\r\n  private createSlider(): ComponentOption {\r\n    const cfg = this.getSliderCfg();\r\n    // 添加 slider 组件\r\n    const component = new SliderComponent({\r\n      container: this.container,\r\n      ...cfg,\r\n    });\r\n\r\n    component.init();\r\n\r\n    return {\r\n      component,\r\n      layer: LAYER.FORE,\r\n      direction: DIRECTION.BOTTOM,\r\n      type: COMPONENT_TYPE.OTHER,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 更新配置\r\n   */\r\n  private updateSlider() {\r\n    const cfg = this.getSliderCfg();\r\n    omit(cfg, ['x', 'y', 'width', 'start', 'end', 'minText', 'maxText']);\r\n\r\n    this.slider.component.update(cfg);\r\n\r\n    return this.slider;\r\n  }\r\n\r\n  /**\r\n   * 生成 slider 配置\r\n   */\r\n  private getSliderCfg() {\r\n    if (isObject(this.option)) {\r\n      // 用户配置的数据，优先级更高\r\n      const trendCfg = {\r\n        data: this.getData(),\r\n        ...get(this.option, 'trendCfg', {}),\r\n      };\r\n\r\n      // 初始的位置大小信息\r\n      const x = 0;\r\n      const y = 0;\r\n      const width = this.view.coordinateBBox.width;\r\n\r\n      // 因为有样式，所以深层覆盖\r\n      const cfg = deepMix({}, { x, y, width }, this.option);\r\n\r\n      // trendCfg 因为有数据数组，所以使用浅替换\r\n      return { ...cfg, trendCfg };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * 从 view 中获取数据，缩略轴使用全量的数据\r\n   */\r\n  private getData(): number[] {\r\n    const data = this.view.getOptions().data;\r\n    const [yScale] = this.view.getYScales();\r\n\r\n    return data.map((datum) => datum[yScale.field] || 0);\r\n  }\r\n\r\n  /**\r\n   * 滑块滑动的时候出发\r\n   * @param v\r\n   */\r\n  private onValueChanged = (v: any) => {\r\n    const [min, max] = v;\r\n\r\n    this.updateMinMaxText(min, max);\r\n\r\n    this.view.render(true);\r\n  };\r\n\r\n  private updateMinMaxText(min: number, max: number) {\r\n    const data = this.view.getOptions().data;\r\n    const dataSize = size(data);\r\n    const xScale = this.view.getXScale();\r\n\r\n    if (!xScale || !dataSize) {\r\n      return;\r\n    }\r\n\r\n    const x = xScale.field;\r\n\r\n    // x 轴数据\r\n    const xData = data.map((datum) => datum[x] || '');\r\n\r\n    const minIndex = Math.floor(min * (dataSize - 1));\r\n    const maxIndex = Math.floor(max * (dataSize - 1));\r\n\r\n    let minText = get(xData, [minIndex]);\r\n    let maxText = get(xData, [maxIndex]);\r\n\r\n    const formatter = this.getSliderCfg().formatter as SliderFormatterType;\r\n    if (formatter) {\r\n      minText = formatter(minText, data[minIndex], minIndex);\r\n      maxText = formatter(maxText, data[maxIndex], maxIndex);\r\n    }\r\n\r\n    // 更新文本\r\n    this.slider.component.update({\r\n      minText,\r\n      maxText,\r\n      start: min,\r\n      end: max,\r\n    });\r\n\r\n    // 增加 x 轴的过滤器\r\n    this.view.filter(xScale.field, (value: any, datum: Datum, idx: number) => isBetween(idx, minIndex, maxIndex));\r\n  }\r\n\r\n  /**\r\n   * 覆写父类方法\r\n   */\r\n  public getComponents() {\r\n    return this.slider ? [this.slider] : [];\r\n  }\r\n}",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"74","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":12},{"ruleId":"69","severity":1,"message":"75","line":4,"column":9,"nodeType":"71","messageId":"72","endLine":4,"endColumn":15},{"ruleId":"69","severity":1,"message":"76","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":12},{"ruleId":"69","severity":1,"message":"77","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":18},{"ruleId":"69","severity":1,"message":"78","line":8,"column":10,"nodeType":"71","messageId":"72","endLine":8,"endColumn":15},{"ruleId":"69","severity":1,"message":"79","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"80","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"74","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":12},{"ruleId":"69","severity":1,"message":"81","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":16},{"ruleId":"69","severity":1,"message":"82","line":6,"column":10,"nodeType":"71","messageId":"72","endLine":6,"endColumn":21},{"ruleId":"69","severity":1,"message":"83","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":10},{"ruleId":"69","severity":1,"message":"79","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"80","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"74","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":12},{"ruleId":"69","severity":1,"message":"81","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":16},{"ruleId":"69","severity":1,"message":"82","line":6,"column":10,"nodeType":"71","messageId":"72","endLine":6,"endColumn":21},{"ruleId":"69","severity":1,"message":"84","line":6,"column":23,"nodeType":"71","messageId":"72","endLine":6,"endColumn":42},{"ruleId":"69","severity":1,"message":"83","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":10},{"ruleId":null,"fatal":true,"severity":2,"message":"85","line":15,"column":12},{"ruleId":"65","replacedBy":"86"},{"ruleId":"67","replacedBy":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'logo' is defined but never used.","'Reward' is defined but never used.","'Loss' is defined but never used.","'rewardLoss' is defined but never used.","'Chart' is defined but never used.","'React' is defined but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'Interaction' is defined but never used.","'G2' is defined but never used.","'registerInteraction' is defined but never used.","Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mSliderOption\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m  \u001b[90m/** slider 高度 */\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 | \u001b[39m  readonly height\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m  \u001b[90m/** 滑块背景区域配置 */\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m  readonly trendCfg\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mTrendCfg\u001b[39m\u001b[33m;\u001b[39m\u001b[0m",["88"],["89"],"no-global-assign","no-unsafe-negation"]